type Product {
  name: String!
  quantity: Int!
}

type Order {
  id: ID!
  status: OrderStatus!
  products: [Product]!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ProductInput {
  name: String!
  quantity: Int!
}

input CreateOrderInput {
  products: [ProductInput!]!
}

input NotifyOrderUpdatedInput {
  id: ID!
  status: OrderStatus!
  updatedAt: AWSDateTime!
}

type OrderUpdated @aws_api_key @aws_iam {
  id: ID!
  status: OrderStatus!
  updatedAt: AWSDateTime!
}

enum OrderStatus {
  PENDING
  PAID
  PREPARING
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
}

type Query

type Mutation {
  createOrder(input: CreateOrderInput!): Order
  notifyOrderUpdated(input: NotifyOrderUpdatedInput!): OrderUpdated! @aws_iam
}

type Subscription {
  onOrderUpdated(id: ID!): OrderUpdated
    @aws_subscribe(mutations: ["notifyOrderUpdated"])
}
